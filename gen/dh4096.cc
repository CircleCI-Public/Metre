#ifndef HEADER_DH_H
# include <openssl/dh.h>
#endif

DH *get_dh4096()
{
    static unsigned char dhp_4096[] = {
	0xFA, 0xA3, 0x59, 0x3B, 0xA0, 0x92, 0x6F, 0x03, 0x17, 0x56, 
	0xFE, 0xBA, 0xBB, 0x7A, 0xB7, 0xC4, 0x51, 0x1F, 0xC0, 0x03, 
	0x74, 0x71, 0x06, 0xD8, 0xC7, 0xA2, 0x02, 0x84, 0x29, 0x68, 
	0x63, 0x35, 0x54, 0x35, 0xA6, 0xB6, 0x48, 0xAA, 0x2F, 0xF1, 
	0x1C, 0x3A, 0x4B, 0xB1, 0x2F, 0x0B, 0x66, 0x9B, 0x19, 0x58, 
	0x08, 0xA3, 0xD3, 0xC8, 0xE4, 0xD0, 0xF1, 0x42, 0x3E, 0xB6, 
	0x9E, 0xEA, 0x62, 0x9B, 0xB8, 0x11, 0x1C, 0x80, 0x8E, 0x83, 
	0x55, 0x62, 0x75, 0x77, 0x76, 0x08, 0xC4, 0xB8, 0xEE, 0x43, 
	0x59, 0x3F, 0x17, 0xD8, 0xEE, 0xD6, 0xFD, 0x8F, 0x2E, 0xF9, 
	0x71, 0xD4, 0x47, 0x3A, 0x49, 0xF5, 0x24, 0xD2, 0xC8, 0xF0, 
	0x6D, 0xA7, 0x60, 0x99, 0xD7, 0xE3, 0x2A, 0xC0, 0xF1, 0x9D, 
	0x53, 0x66, 0xF9, 0xE3, 0x9E, 0xC7, 0xBA, 0x41, 0xAE, 0x46, 
	0x32, 0xDD, 0xFA, 0xD1, 0xFD, 0x91, 0xF6, 0xDA, 0xDC, 0xCA, 
	0x99, 0x18, 0xEE, 0xA7, 0x52, 0x96, 0x87, 0x11, 0x55, 0xC7, 
	0xAF, 0x46, 0x0D, 0xC6, 0xE8, 0xF3, 0x8C, 0x48, 0xF0, 0x6B, 
	0x74, 0xA2, 0xBE, 0xDC, 0xF5, 0x62, 0xC8, 0x48, 0x35, 0x59, 
	0x8D, 0xFB, 0x94, 0x6F, 0xC0, 0xCF, 0xEF, 0xFD, 0xBD, 0x01, 
	0x55, 0x66, 0x1A, 0x3F, 0x3F, 0xD4, 0xF8, 0x21, 0x91, 0xBE, 
	0x0C, 0xC3, 0x61, 0x55, 0xDE, 0x24, 0xCC, 0x4B, 0x34, 0xE1, 
	0xEC, 0x2B, 0xD5, 0x3D, 0x73, 0x67, 0x17, 0x20, 0x77, 0x7E, 
	0xB9, 0x10, 0x7D, 0x63, 0x40, 0x84, 0x40, 0xD8, 0xC5, 0xC3, 
	0xD4, 0x78, 0x35, 0x1E, 0x3B, 0x5E, 0x9E, 0xE7, 0x91, 0xD6, 
	0x8A, 0xCE, 0x25, 0x35, 0x57, 0x8E, 0xBC, 0xB3, 0xDE, 0xBD, 
	0xEF, 0x2D, 0x89, 0x8C, 0xC2, 0xED, 0x14, 0x1A, 0xB3, 0x67, 
	0x8A, 0xA6, 0x93, 0x23, 0xC9, 0xBF, 0x1D, 0x0F, 0x95, 0xDC, 
	0x93, 0x76, 0x13, 0x07, 0x63, 0x88, 0xC7, 0x75, 0xA5, 0xCB, 
	0xB6, 0x47, 0xB2, 0xE9, 0x9C, 0xF3, 0x9C, 0xFB, 0x7A, 0xDC, 
	0x74, 0xCF, 0x83, 0x25, 0x85, 0xE4, 0x6D, 0x16, 0x88, 0x1B, 
	0x34, 0x7A, 0x00, 0xD7, 0xDE, 0xC7, 0xE4, 0xEF, 0x53, 0x22, 
	0x23, 0x9C, 0xC5, 0x15, 0xAD, 0x48, 0x1D, 0x51, 0xF7, 0x53, 
	0xFC, 0xC7, 0x29, 0x78, 0xC3, 0xE0, 0xC4, 0x47, 0xF1, 0xD7, 
	0x33, 0xF1, 0x90, 0x01, 0xA8, 0x42, 0xA2, 0x30, 0x98, 0xB8, 
	0xA4, 0x63, 0xD9, 0xB5, 0x70, 0x86, 0x64, 0xB1, 0x07, 0x84, 
	0x37, 0xF9, 0x5E, 0x08, 0xBC, 0xF2, 0x35, 0xDE, 0xDC, 0x0F, 
	0x45, 0x11, 0x9E, 0x5F, 0x1E, 0x37, 0x3D, 0x52, 0x4F, 0x57, 
	0xD9, 0xA0, 0xA9, 0xE8, 0xDC, 0x33, 0x67, 0xA9, 0x53, 0x14, 
	0x34, 0x95, 0xDB, 0xEE, 0x3B, 0xE3, 0x2D, 0x27, 0xE9, 0xB4, 
	0x9E, 0x65, 0x9A, 0x83, 0x5C, 0x68, 0x39, 0x89, 0xA5, 0xC8, 
	0x4F, 0x4C, 0x28, 0xB7, 0xB8, 0xF5, 0xF4, 0x51, 0x8A, 0xB2, 
	0xB8, 0xD3, 0xD0, 0xFA, 0x39, 0x36, 0xDD, 0x74, 0x3B, 0x22, 
	0x34, 0xD2, 0xE4, 0xBA, 0xE7, 0x3A, 0xFB, 0x50, 0xD6, 0x81, 
	0x37, 0x45, 0xED, 0x34, 0xF4, 0xED, 0xE8, 0x1E, 0x26, 0x21, 
	0xD9, 0x9D, 0xC7, 0x70, 0xB2, 0xC2, 0xEE, 0x38, 0xD2, 0xD0, 
	0x65, 0xB5, 0x54, 0xD6, 0x2B, 0x68, 0xA0, 0x94, 0x78, 0x0A, 
	0x70, 0x24, 0x60, 0xA6, 0xFC, 0x02, 0xA0, 0x77, 0x5C, 0x03, 
	0xA7, 0x4C, 0x2E, 0x01, 0xA8, 0x7C, 0x47, 0xDE, 0x73, 0x8C, 
	0xC9, 0x64, 0x20, 0xF1, 0x33, 0x50, 0xEC, 0x63, 0x17, 0x92, 
	0xB2, 0x4D, 0x1D, 0x1C, 0xEA, 0xD8, 0xAF, 0xA6, 0xE9, 0xC3, 
	0x13, 0xF5, 0x47, 0x25, 0xEB, 0x7E, 0x52, 0x32, 0x62, 0x0E, 
	0x6C, 0x7D, 0x9F, 0x49, 0x1E, 0x2D, 0x8C, 0x62, 0x8F, 0x9F, 
	0xE7, 0x4F, 0x10, 0xB0, 0xEA, 0xF3, 0x21, 0x49, 0x53, 0xC8, 
	0x35, 0xD3
    };
    static unsigned char dhg_4096[] = {
	0x02
    };
    DH *dh = DH_new();
    BIGNUM *dhp_bn, *dhg_bn;

    if (dh == NULL)
        return NULL;
    dhp_bn = BN_bin2bn(dhp_4096, sizeof (dhp_4096), NULL);
    dhg_bn = BN_bin2bn(dhg_4096, sizeof (dhg_4096), NULL);
    if (dhp_bn == NULL || dhg_bn == NULL
            || !DH_set0_pqg(dh, dhp_bn, NULL, dhg_bn)) {
        DH_free(dh);
        BN_free(dhp_bn);
        BN_free(dhg_bn);
        return NULL;
    }
    return dh;
}
